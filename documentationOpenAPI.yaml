openapi: 3.0.0
info:
  title: Documentation de l'API
  description: API pour voir les tableaux de scores des donjons
  version: 1.0.0

paths:
  /api/players/:
    get:
      parameters:
        - name: page
          in: query
          description: Le numéro de la page
          schema:
            type: integer
            default: 1
          required: false
        - name: size
          in: query
          description: La taille de la page
          schema:
            type: integer
            default: 5
          required: false
      description: Donne la liste des joueurs
      responses:
        '200':
          description: Récupération de la liste des joueurs réussie
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
    
    post :
      description: Ajoute un joueur
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                  uniqueItems: true
      responses:
        '201':
          description: Insertion du nouveau joueur réussie
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
  /api/players/{id}:
    get:
      parameters:
        - name: id
          in: path
          description: L'identifiant du joueur
          schema:
            type: integer
          required: true
        
      description: Donne les informations du joueur
      responses:
        '200':
          description: Récupération des informations du joueur réussie
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string




    put: 
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: ID du joueur
      description: Modifie un joueur

      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                  uniqueItems: true
      
      responses:
        '201':
          description: Modification du joueur réussie
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string

        '404':
          description: Nom Invalide, ou joueur non trouvé, ou erreur durant la modification 
          content:
            text/plain:
              schema:
                type: string
    
    delete: 
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: ID du joueur
      description: Supprime un joueur
      
      responses:
        '201':
          description: Suppression du joueur réussie
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string

        '404':
          description: Joueur non trouvé 
          content:
            text/plain:
              schema:
                type: string

  /api/players/name/{name}:
    get:
      parameters:
        - name: name
          in: path
          description: Le pseudo du joueur
          schema:
            type: string
          required: true
        
      description: Donne les informations du joueur
      responses:
        '200':
          description: Récupération des informations du joueur réussie
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string


  /api/dungeons/:
    get:
      parameters:
        - name: page
          in: query
          description: Le numéro de la page
          schema:
            type: integer
            default: 1
          required: false
        - name: size
          in: query
          description: La taille de la page
          schema:
            type: integer
            default: 5
          required: false
      description: Donne la liste des donjons
      responses:
        '200':
          description: Récupération de la liste des donjon réussie
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
    
    post :
      description: Ajoute un donjon
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                  uniqueItems: true
      responses:
        '201':
          description: Insertion du nouveau donjon réussie
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
  /api/dungeons/{id}:
    get:
      parameters:
        - name: id
          in: path
          description: L'identifiant du donjon
          schema:
            type: integer
          required: true
        
      description: Donne les informations du donjon
      responses:
        '200':
          description: Récupération des informations du donjon réussie
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string




    put: 
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: ID du donjon
      description: Modifie un donjon
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                  uniqueItems: true
      
      responses:
        '201':
          description: Modification du donjon réussie
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string

        '404':
          description: Nom Invalide, ou donjon non trouvé, ou erreur durant la modification 
          content:
            text/plain:
              schema:
                type: string
    
    delete: 
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: ID du donjon
      description: Supprime un donjon
      
      responses:
        '201':
          description: Suppression du donjon réussie
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string

        '404':
          description: Donjon non trouvé 
          content:
            text/plain:
              schema:
                type: string

  /api/dungeons/name/{name}:
    get:
      parameters:
        - name: name
          in: path
          description: Le pseudo du donjon
          schema:
            type: string
          required: true
        
      description: Donne les informations du donjon
      responses:
        '200':
          description: Récupération des informations du donjon réussie
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string

  /api/scores/:
    get:
      parameters:
        - name: page
          in: query
          description: Le numéro de la page
          schema:
            type: integer
            default: 1
          required: false
        - name: size
          in: query
          description: La taille de la page
          schema:
            type: integer
            default: 5
          required: false
      description: Donne la liste des scores
      responses:
        '200':
          description: Récupération de la liste des scores réussie
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    dungeonId:
                      type: string
                    group:
                      type: array
                      items: 
                        type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                          
                    points:
                      type: integer
    
    post :
      description: Ajoute un score
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - dungeonId
                - points
                - playerIds
              properties:
                dungeonId:
                  type: integer
                points:
                  type: integer
                playerIds:
                  type: array
                  items:
                    type: integer
      responses:
        '201':
          description: Insertion du nouveau score réussie
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  dungeonId:
                    type: integer
                  points:
                    type: integer
                  playerIds:
                    type: array
                    items:
                      type: integer
  /api/scores/{id}:
    get:
      parameters:
        - name: id
          in: path
          description: L'identifiant du score
          schema:
            type: integer
          required: true
        
      description: Donne les informations du score
      responses:
        '200':
          description: Récupération des informations du score réussie
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  dungeonId:
                    type: integer
                  points:
                    type: integer
                  playerIds:
                    type: array
                    items:
                      type: integer




    put: 
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: ID du score
      description: Modifie un score
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                dungeonId:
                  type: integer
                points:
                  type: integer
                playerIds:
                  type: array
                  items:
                    type: integer
      
      responses:
        '201':
          description: Modification du score réussie
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  dungeonId:
                    type: integer
                  points:
                    type: integer
                  playerIds:
                    type: array
                    items:
                      type: integer

        '404':
          description: Nom Invalide, ou score non trouvé, ou erreur durant la modification 
          content:
            text/plain:
              schema:
                type: string
    
    delete: 
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: ID du score
      description: Supprime un score
      
      responses:
        '201':
          description: Suppression du score réussie
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  dungeonId:
                    type: integer
                  points:
                    type: integer
                  playerIds:
                    type: array
                    items:
                      type: integer

        '404':
          description: Score non trouvé 
          content:
            text/plain:
              schema:
                type: string

  /api/scores/player/{id}:
    get:
      parameters:
        - name: id
          in: path
          description: L'identifiant du joueur
          schema:
            type: integer
          required: true

        - name: page
          in: query
          description: Le numéro de la page
          schema:
            type: integer
            default: 1
          required: false
        - name: size
          in: query
          description: La taille de la page
          schema:
            type: integer
            default: 5
          required: false
        
      description: Donne les scores du joueur
      responses:
        '200':
          description: Récupération des informations réussie
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    dungeonId:
                      type: integer
                    points:
                      type: integer
                    playerIds:
                      type: array
                      items:
                        type: integer

  /api/scores/dungeon/{id}:
    get:
      parameters:
        - name: id
          in: path
          description: L'identifiant du joueur
          schema:
            type: integer
          required: true

        - name: page
          in: query
          description: Le numéro de la page
          schema:
            type: integer
            default: 1
          required: false
        - name: size
          in: query
          description: La taille de la page
          schema:
            type: integer
            default: 5
          required: false
        
      description: Donne les scores du donjon
      responses:
        '200':
          description: Récupération des informations réussie
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    dungeonId:
                      type: integer
                    points:
                      type: integer
                    playerIds:
                      type: array
                      items:
                        type: integer


  
      


  
      